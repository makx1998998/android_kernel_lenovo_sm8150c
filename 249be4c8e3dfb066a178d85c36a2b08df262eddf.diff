diff --git a/drivers/gpu/msm/Makefile b/drivers/gpu/msm/Makefile
index b1f075ce037d..623feb5a6cdf 100644
--- a/drivers/gpu/msm/Makefile
+++ b/drivers/gpu/msm/Makefile
@@ -30,16 +30,8 @@ msm_adreno-y += \
 	adreno_snapshot.o \
 	adreno_coresight.o \
 	adreno_trace.o \
-	adreno_a3xx.o \
-	adreno_a4xx.o \
-	adreno_a5xx.o \
 	adreno_a6xx.o \
-	adreno_a3xx_snapshot.o \
-	adreno_a4xx_snapshot.o \
-	adreno_a5xx_snapshot.o \
 	adreno_a6xx_snapshot.o \
-	adreno_a4xx_preempt.o \
-	adreno_a5xx_preempt.o \
 	adreno_a6xx_preempt.o \
 	adreno_a6xx_gmu.o \
 	adreno_a6xx_rgmu.o \
diff --git a/drivers/gpu/msm/adreno-gpulist.h b/drivers/gpu/msm/adreno-gpulist.h
index 7beccf2b3cdc..f93d3d2f4b1d 100644
--- a/drivers/gpu/msm/adreno-gpulist.h
+++ b/drivers/gpu/msm/adreno-gpulist.h
@@ -14,312 +14,6 @@
 #define ANY_ID (~0)
 
 static const struct adreno_gpu_core adreno_gpulist[] = {
-	{
-		.gpurev = ADRENO_REV_A306,
-		.core = 3,
-		.major = 0,
-		.minor = 6,
-		.patchid = 0x00,
-		.features = ADRENO_SOFT_FAULT_DETECT,
-		.pm4fw_name = "a300_pm4.fw",
-		.pfpfw_name = "a300_pfp.fw",
-		.gpudev = &adreno_a3xx_gpudev,
-		.gmem_size = SZ_128K,
-		.busy_mask = 0x7FFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A306A,
-		.core = 3,
-		.major = 0,
-		.minor = 6,
-		.patchid = 0x20,
-		.features = ADRENO_SOFT_FAULT_DETECT,
-		.pm4fw_name = "a300_pm4.fw",
-		.pfpfw_name = "a300_pfp.fw",
-		.gpudev = &adreno_a3xx_gpudev,
-		.gmem_size = SZ_128K,
-		.busy_mask = 0x7FFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A304,
-		.core = 3,
-		.major = 0,
-		.minor = 4,
-		.patchid = 0x00,
-		.features = ADRENO_SOFT_FAULT_DETECT,
-		.pm4fw_name = "a300_pm4.fw",
-		.pfpfw_name = "a300_pfp.fw",
-		.gpudev = &adreno_a3xx_gpudev,
-		.gmem_size = (SZ_64K + SZ_32K),
-		.busy_mask = 0x7FFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A405,
-		.core = 4,
-		.major = 0,
-		.minor = 5,
-		.patchid = ANY_ID,
-		.features = ADRENO_SOFT_FAULT_DETECT,
-		.pm4fw_name = "a420_pm4.fw",
-		.pfpfw_name = "a420_pfp.fw",
-		.gpudev = &adreno_a4xx_gpudev,
-		.gmem_size = SZ_256K,
-		.busy_mask = 0x7FFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A420,
-		.core = 4,
-		.major = 2,
-		.minor = 0,
-		.patchid = ANY_ID,
-		.features = ADRENO_USES_OCMEM | ADRENO_WARM_START |
-			ADRENO_USE_BOOTSTRAP | ADRENO_SOFT_FAULT_DETECT,
-		.pm4fw_name = "a420_pm4.fw",
-		.pfpfw_name = "a420_pfp.fw",
-		.gpudev = &adreno_a4xx_gpudev,
-		.gmem_size = (SZ_1M + SZ_512K),
-		.pm4_jt_idx = 0x901,
-		.pm4_jt_addr = 0x300,
-		.pfp_jt_idx = 0x401,
-		.pfp_jt_addr = 0x400,
-		.pm4_bstrp_size = 0x06,
-		.pfp_bstrp_size = 0x28,
-		.pfp_bstrp_ver = 0x4ff083,
-		.busy_mask = 0x7FFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A430,
-		.core = 4,
-		.major = 3,
-		.minor = 0,
-		.patchid = ANY_ID,
-		.features = ADRENO_USES_OCMEM  | ADRENO_WARM_START |
-			ADRENO_USE_BOOTSTRAP | ADRENO_SPTP_PC | ADRENO_PPD |
-			ADRENO_CONTENT_PROTECTION | ADRENO_PREEMPTION |
-			ADRENO_SOFT_FAULT_DETECT,
-		.pm4fw_name = "a420_pm4.fw",
-		.pfpfw_name = "a420_pfp.fw",
-		.gpudev = &adreno_a4xx_gpudev,
-		.gmem_size = (SZ_1M + SZ_512K),
-		.pm4_jt_idx = 0x901,
-		.pm4_jt_addr = 0x300,
-		.pfp_jt_idx = 0x401,
-		.pfp_jt_addr = 0x400,
-		.pm4_bstrp_size = 0x06,
-		.pfp_bstrp_size = 0x28,
-		.pfp_bstrp_ver = 0x4ff083,
-		.shader_offset = 0x20000,
-		.shader_size = 0x10000,
-		.num_protected_regs = 0x18,
-		.busy_mask = 0x7FFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A418,
-		.core = 4,
-		.major = 1,
-		.minor = 8,
-		.patchid = ANY_ID,
-		.features = ADRENO_USES_OCMEM  | ADRENO_WARM_START |
-			ADRENO_USE_BOOTSTRAP | ADRENO_SPTP_PC |
-			ADRENO_SOFT_FAULT_DETECT,
-		.pm4fw_name = "a420_pm4.fw",
-		.pfpfw_name = "a420_pfp.fw",
-		.gpudev = &adreno_a4xx_gpudev,
-		.gmem_size = (SZ_512K),
-		.pm4_jt_idx = 0x901,
-		.pm4_jt_addr = 0x300,
-		.pfp_jt_idx = 0x401,
-		.pfp_jt_addr = 0x400,
-		.pm4_bstrp_size = 0x06,
-		.pfp_bstrp_size = 0x28,
-		.pfp_bstrp_ver = 0x4ff083,
-		.shader_offset = 0x20000, /* SP and TP addresses */
-		.shader_size = 0x10000,
-		.num_protected_regs = 0x18,
-		.busy_mask = 0x7FFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A530,
-		.core = 5,
-		.major = 3,
-		.minor = 0,
-		.patchid = 0,
-		.pm4fw_name = "a530v1_pm4.fw",
-		.pfpfw_name = "a530v1_pfp.fw",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = SZ_1M,
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A530,
-		.core = 5,
-		.major = 3,
-		.minor = 0,
-		.patchid = 1,
-		.features = ADRENO_GPMU | ADRENO_SPTP_PC | ADRENO_LM |
-			ADRENO_PREEMPTION | ADRENO_64BIT |
-			ADRENO_CONTENT_PROTECTION,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.zap_name = "a530_zap",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = SZ_1M,
-		.num_protected_regs = 0x20,
-		.gpmufw_name = "a530_gpmu.fw2",
-		.gpmu_major = 1,
-		.gpmu_minor = 0,
-		.busy_mask = 0xFFFFFFFE,
-		.lm_major = 3,
-		.lm_minor = 0,
-		.gpmu_tsens = 0x00060007,
-		.max_power = 5448,
-		.regfw_name = "a530v2_seq.fw2",
-	},
-	{
-		.gpurev = ADRENO_REV_A530,
-		.core = 5,
-		.major = 3,
-		.minor = 0,
-		.patchid = ANY_ID,
-		.features = ADRENO_GPMU | ADRENO_SPTP_PC | ADRENO_LM |
-			ADRENO_PREEMPTION | ADRENO_64BIT |
-			ADRENO_CONTENT_PROTECTION,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.zap_name = "a530_zap",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = SZ_1M,
-		.num_protected_regs = 0x20,
-		.gpmufw_name = "a530v3_gpmu.fw2",
-		.gpmu_major = 1,
-		.gpmu_minor = 0,
-		.busy_mask = 0xFFFFFFFE,
-		.lm_major = 1,
-		.lm_minor = 0,
-		.gpmu_tsens = 0x00060007,
-		.max_power = 5448,
-		.regfw_name = "a530v3_seq.fw2",
-	},
-	{
-		.gpurev = ADRENO_REV_A505,
-		.core = 5,
-		.major = 0,
-		.minor = 5,
-		.patchid = ANY_ID,
-		.features = ADRENO_PREEMPTION | ADRENO_64BIT,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = (SZ_128K + SZ_8K),
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A506,
-		.core = 5,
-		.major = 0,
-		.minor = 6,
-		.patchid = ANY_ID,
-		.features = ADRENO_PREEMPTION | ADRENO_64BIT |
-			ADRENO_CONTENT_PROTECTION | ADRENO_CPZ_RETENTION,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.zap_name = "a506_zap",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = (SZ_128K + SZ_8K),
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A510,
-		.core = 5,
-		.major = 1,
-		.minor = 0,
-		.patchid = ANY_ID,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = SZ_256K,
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A540,
-		.core = 5,
-		.major = 4,
-		.minor = 0,
-		.patchid = 0,
-		.features = ADRENO_PREEMPTION | ADRENO_64BIT |
-			ADRENO_CONTENT_PROTECTION |
-			ADRENO_GPMU | ADRENO_SPTP_PC,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.zap_name = "a540_zap",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = SZ_1M,
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-		.gpmufw_name = "a540_gpmu.fw2",
-		.gpmu_major = 3,
-		.gpmu_minor = 0,
-		.gpmu_tsens = 0x000C000D,
-		.max_power = 5448,
-	},
-	{
-		.gpurev = ADRENO_REV_A540,
-		.core = 5,
-		.major = 4,
-		.minor = 0,
-		.patchid = ANY_ID,
-		.features = ADRENO_PREEMPTION | ADRENO_64BIT |
-			ADRENO_CONTENT_PROTECTION |
-			ADRENO_GPMU | ADRENO_SPTP_PC,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.zap_name = "a540_zap",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = SZ_1M,
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-		.gpmufw_name = "a540_gpmu.fw2",
-		.gpmu_major = 3,
-		.gpmu_minor = 0,
-		.gpmu_tsens = 0x000C000D,
-		.max_power = 5448,
-	},
-	{
-		.gpurev = ADRENO_REV_A512,
-		.core = 5,
-		.major = 1,
-		.minor = 2,
-		.patchid = ANY_ID,
-		.features = ADRENO_PREEMPTION | ADRENO_64BIT |
-			ADRENO_CONTENT_PROTECTION | ADRENO_CPZ_RETENTION,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.zap_name = "a512_zap",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = (SZ_256K + SZ_16K),
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-	},
-	{
-		.gpurev = ADRENO_REV_A508,
-		.core = 5,
-		.major = 0,
-		.minor = 8,
-		.patchid = ANY_ID,
-		.features = ADRENO_PREEMPTION | ADRENO_64BIT |
-			ADRENO_CONTENT_PROTECTION | ADRENO_CPZ_RETENTION,
-		.pm4fw_name = "a530_pm4.fw",
-		.pfpfw_name = "a530_pfp.fw",
-		.zap_name = "a508_zap",
-		.gpudev = &adreno_a5xx_gpudev,
-		.gmem_size = (SZ_128K + SZ_8K),
-		.num_protected_regs = 0x20,
-		.busy_mask = 0xFFFFFFFE,
-	},
 	{
 		.gpurev = ADRENO_REV_A630,
 		.core = 6,
diff --git a/drivers/gpu/msm/adreno.c b/drivers/gpu/msm/adreno.c
index 0588bd45157a..c25ebe5b6f99 100644
--- a/drivers/gpu/msm/adreno.c
+++ b/drivers/gpu/msm/adreno.c
@@ -1637,13 +1637,6 @@ int adreno_set_unsecured_mode(struct adreno_device *adreno_dev,
 	if (!adreno_is_a5xx(adreno_dev) && !adreno_is_a6xx(adreno_dev))
 		return -EINVAL;
 
-	if (ADRENO_QUIRK(adreno_dev, ADRENO_QUIRK_CRITICAL_PACKETS) &&
-			adreno_is_a5xx(adreno_dev)) {
-		ret = a5xx_critical_packet_submit(adreno_dev, rb);
-		if (ret)
-			return ret;
-	}
-
 	/* GPU comes up in secured mode, make it unsecured by default */
 	if (adreno_dev->zap_loaded)
 		ret = adreno_switch_to_unsecure_mode(adreno_dev, rb);
diff --git a/drivers/gpu/msm/adreno.h b/drivers/gpu/msm/adreno.h
index 13a872d3a3c0..766597bf482e 100644
--- a/drivers/gpu/msm/adreno.h
+++ b/drivers/gpu/msm/adreno.h
@@ -1096,9 +1096,6 @@ extern unsigned int *adreno_ft_regs;
 extern unsigned int adreno_ft_regs_num;
 extern unsigned int *adreno_ft_regs_val;
 
-extern struct adreno_gpudev adreno_a3xx_gpudev;
-extern struct adreno_gpudev adreno_a4xx_gpudev;
-extern struct adreno_gpudev adreno_a5xx_gpudev;
 extern struct adreno_gpudev adreno_a6xx_gpudev;
 
 extern int adreno_wake_nice;
diff --git a/drivers/gpu/msm/adreno_cp_parser.h b/drivers/gpu/msm/adreno_cp_parser.h
index 1fa46c147c3c..d879e5079f7c 100644
--- a/drivers/gpu/msm/adreno_cp_parser.h
+++ b/drivers/gpu/msm/adreno_cp_parser.h
@@ -15,9 +15,6 @@
 
 #include "adreno.h"
 
-extern const unsigned int a3xx_cp_addr_regs[];
-extern const unsigned int a4xx_cp_addr_regs[];
-
 /*
  * struct adreno_ib_object - Structure containing information about an
  * address range found in an IB
@@ -134,15 +131,7 @@ static inline void adreno_ib_init_ib_obj(uint64_t gpuaddr,
 static inline int adreno_cp_parser_getreg(struct adreno_device *adreno_dev,
 					enum adreno_cp_addr_regs reg_enum)
 {
-	if (reg_enum == ADRENO_CP_ADDR_MAX)
-		return -EEXIST;
-
-	if (adreno_is_a3xx(adreno_dev))
-		return a3xx_cp_addr_regs[reg_enum];
-	else if (adreno_is_a4xx(adreno_dev))
-		return a4xx_cp_addr_regs[reg_enum];
-	else
-		return -EEXIST;
+	return -EEXIST;
 }
 
 /*
@@ -160,19 +149,6 @@ static inline int adreno_cp_parser_regindex(struct adreno_device *adreno_dev,
 				enum adreno_cp_addr_regs start,
 				enum adreno_cp_addr_regs end)
 {
-	int i;
-	const unsigned int *regs;
-
-	if (adreno_is_a4xx(adreno_dev))
-		regs = a4xx_cp_addr_regs;
-	else if (adreno_is_a3xx(adreno_dev))
-		regs = a3xx_cp_addr_regs;
-	else
-		return -EEXIST;
-
-	for (i = start; i <= end && i < ADRENO_CP_ADDR_MAX; i++)
-		if (regs[i] == offset)
-			return i;
 	return -EEXIST;
 }
 
